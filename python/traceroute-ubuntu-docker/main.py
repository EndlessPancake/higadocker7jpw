import sys
import time
import os
import subprocess
import configparser
from scapy.as_resolvers import AS_resolver_radb
from scapy.all import traceroute

iniesta = configparser.ConfigParser()
iniesta.read('./config.ini', 'UTF-8')

domains = iniesta['targets']['host']
target = domains.split(' ')
# scapy rule => int()
dst_port = int(iniesta['targets']['port'])
svg_file = iniesta['graph']['svg']
png_file = iniesta['graph']['png']

if __name__ == '__main__':
   if len(target) >= 1 and target[0] != '':
      # Start Route Tracking
      res, unans = traceroute(domains, dport=dst_port, retry=-2)
      # The information generated by traceroute is rendered as svg
      # -- Change ASres=AS_resolver_radb() to a available whois provider instead of the default qiang provider after the original AS res=None
      res.graph(target="> %s" % svg_file , ASres=AS_resolver_radb(), type="svg")
      time.sleep(1)
      ## svg to png
      # subprocess.Popen("/usr/bin/convert graph.svg /tmp/graph.png", shell=True)
   else:
      print("IP/domain number of errors, exit")
